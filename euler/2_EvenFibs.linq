<Query Kind="Program">
  <Namespace>Xunit</Namespace>
</Query>

#load "xunit"

void Main()
{
	RunTests();  // Call RunTests() or press Alt+Shift+T to initiate testing.

	/*
	Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
	By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
	find the sum of the even-valued terms.
	*/
}

public class Solution
{
	public long GetEvenFibs(int limit) 
	{
		long result = 2; 
		int next; 
		int v1 = 1;
		int v2 = 2;
		while (v2 < limit) 
		{
			next = v1 + v2; 
			if (next % 2 == 0) result += next;
			int v3 = v1 + v2; 
			v1 = v2; 
			v2 = v3;
		}
		return result;
	}
}

#region private::Tests

[Theory]
[InlineData(5, 2)]
[InlineData(20, 10)]
[InlineData(150, 188)]
void Test(int limit, long expected) 
{
	long result = new Solution().GetEvenFibs(limit); 
	Assert.Equal(expected, result); 
}

#endregion